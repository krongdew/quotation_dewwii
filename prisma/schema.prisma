// quotation-system/prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String       @id @default(uuid())
  email             String       @unique
  password          String
  displayName       String
  role              UserRole     @default(USER)
  resetToken        String?      
  resetTokenExpiry  DateTime?
  lastLogin         DateTime?
  active            Boolean      @default(true)
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

enum UserRole {
  ADMIN
  USER
}

model Customer {
  id                String       @id @default(uuid())
  companyName       String
  address           String
  phoneNumber       String?
  email             String?
  taxId             String?
  contactPerson     String
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  quotations        Quotation[]
  financialDocs     FinancialDocument[]
}

model CompanyProfile {
  id                String       @id @default(uuid())
  companyName       String
  address           String
  phoneNumber       String?
  email             String?
  taxId             String?
  contactPerson     String
  logo              String?
  signature         String?
  isDefault         Boolean      @default(false)
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  quotations        Quotation[]
  financialDocs     FinancialDocument[]
}

model Quotation {
  id                String           @id @default(uuid())
  quotationNumber   String           @unique
  issueDate         DateTime
  customer          Customer         @relation(fields: [customerId], references: [id])
  customerId        String
  company           CompanyProfile?  @relation(fields: [companyId], references: [id])
  companyId         String?
  includeVat        Boolean          @default(false)
  items             QuotationItem[]
  subtotal          Float
  discount          Float            @default(0)
  afterDiscount     Float
  vat               Float
  totalAmount       Float
  withholding       Float            @default(0)
  netTotal          Float
  customerSignature String?
  sellerSignature   String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  // เพิ่มความสัมพันธ์กับเอกสารทางการเงิน
  financialDocs     FinancialDocument[]
}

model QuotationItem {
  id            String     @id @default(uuid())
  quotation     Quotation  @relation(fields: [quotationId], references: [id], onDelete: Cascade)
  quotationId   String
  description   String
  unit          String
  quantity      Int
  pricePerUnit  Float
  amount        Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

// เพิ่มโมเดลใหม่สำหรับเอกสารทางการเงิน
model FinancialDocument {
  id                String           @id @default(uuid())
  documentNumber    String           @unique
  documentType      DocumentType     // INVOICE, RECEIPT, TAX_INVOICE
  issueDate         DateTime
  dueDate           DateTime?        // สำหรับใบวางบิล
  
  // อ้างอิงถึงใบเสนอราคา
  quotation         Quotation?       @relation(fields: [quotationId], references: [id])
  quotationId       String?
  
  // ข้อมูลลูกค้าและบริษัท
  customer          Customer         @relation(fields: [customerId], references: [id])
  customerId        String
  company           CompanyProfile?  @relation(fields: [companyId], references: [id])
  companyId         String?
  
  // ข้อมูลการเงิน
  includeVat        Boolean          @default(false)
  subtotal          Float
  discount          Float            @default(0)
  afterDiscount     Float
  vat               Float
  totalAmount       Float
  withholding       Float            @default(0)
  netTotal          Float
  
  // ข้อมูลการชำระเงิน (สำหรับใบเสร็จ)
  isPaid            Boolean          @default(false)
  paymentMethod     PaymentMethod?   // CASH, TRANSFER, CHECK, CREDIT_CARD
  paymentDate       DateTime?
  paymentReference  String?          // เลขที่เช็ค, เลขอ้างอิงการโอน
  
  // ลายเซ็น
  customerSignature String?
  sellerSignature   String?
  
  // รายการสินค้า/บริการ
  items             FinancialDocumentItem[]
  
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
}

model FinancialDocumentItem {
  id                String            @id @default(uuid())
  document          FinancialDocument @relation(fields: [documentId], references: [id], onDelete: Cascade)
  documentId        String
  description       String
  unit              String
  quantity          Int
  pricePerUnit      Float
  amount            Float
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}

enum DocumentType {
  INVOICE          // ใบวางบิล
  RECEIPT          // ใบเสร็จรับเงิน
  TAX_INVOICE      // ใบกำกับภาษี
}

enum PaymentMethod {
  CASH             // เงินสด
  TRANSFER         // โอนเงิน
  CHECK            // เช็ค
  CREDIT_CARD      // บัตรเครดิต
}